log(1e-5)
seq(log(1e-5),log(10),length=10)
load("C:/Users/Xin/OneDrive/bangmang/Data analysis/code/91_y_all_G_10lam_10sig.Rdata")
possible_indx[potential_y_indx]#t
conditions[83]
selected_G_names[[24.]]
selected_G_names[[24]]
method_names1[[24]]
method_names2[[24]]
method_names3[[24]]
length(possible_indx)
load("C:/Users/Xin/OneDrive/bangmang/simulation code/simulation code/comp_s1_fix_sd.Rdata")
lambda
lambdas
mean_result
load("C:/Users/Xin/OneDrive/bangmang/simulation code/plot/complex_ncol5_vsbeta.Rdata")
load("C:/Users/Xin/OneDrive/bangmang/simulation code/simulation code/comp_s1_fix_sd.Rdata")
ibrary(latex2exp)
library(MASS)
yplot_SLR<-sapply(1:151,function(x) {
return(mean_result[1,][[x]])
})
yplot_Kernel<-sapply(1:151,function(x) {
return(mean_result[2,][[x]])
})
yplot_igwas<-sapply(1:151,function(x) {
return(mean_result[4,][[x]])
})
plot(yplot_Kernel~beta1_grid,xlab=(TeX('$\\beta_1$')), ylab='Power',ylim=c(0,1),
type='o',lty=1,col='red',lwd=2.2,yaxt='n',
cex.lab=1.5, cex.axis=1.3, cex.main=1.5, cex.sub=1.5)
#SLR
# points(yplot_SLR~beta1_grid,pch=6,col='blue',lwd=1.85)
lines(yplot_SLR~beta1_grid,lty=1,col='blue',lwd=1.85)
#igwas
# points(yplot_igwas~beta1_grid,pch=5,col=25,lwd=1.5)
lines(yplot_igwas~beta1_grid,lty=1,col=25,lwd=1.5)
abline(a = 0.05, b = 0,lty=2)
axis(side=2, at=c(0,0.05,0.2,0.4,0.6,0.8,1),
labels=c(0,0.05,0.2,0.4,0.6,0.8,1),cex.axis=1.3,las=2)
legend(0.02, 0.3, c("KMM","SLR", "Zhao et al."),
col = c('red', 'blue', 25),
text.col = "black", lty = c(1, 1, 1),lwd=c(2.2,2,1.5),
pch=c(1,NA,NA),
merge = TRUE, bg = "gray90",cex=1.1)
library(latex2exp)
library(MASS)
yplot_SLR<-sapply(1:151,function(x) {
return(mean_result[1,][[x]])
})
yplot_Kernel<-sapply(1:151,function(x) {
return(mean_result[2,][[x]])
})
yplot_igwas<-sapply(1:151,function(x) {
return(mean_result[4,][[x]])
})
plot(yplot_Kernel~beta1_grid,xlab=(TeX('$\\beta_1$')), ylab='Power',ylim=c(0,1),
type='o',lty=1,col='red',lwd=2.2,yaxt='n',
cex.lab=1.5, cex.axis=1.3, cex.main=1.5, cex.sub=1.5)
#SLR
# points(yplot_SLR~beta1_grid,pch=6,col='blue',lwd=1.85)
lines(yplot_SLR~beta1_grid,lty=1,col='blue',lwd=1.85)
#igwas
# points(yplot_igwas~beta1_grid,pch=5,col=25,lwd=1.5)
lines(yplot_igwas~beta1_grid,lty=1,col=25,lwd=1.5)
abline(a = 0.05, b = 0,lty=2)
axis(side=2, at=c(0,0.05,0.2,0.4,0.6,0.8,1),
labels=c(0,0.05,0.2,0.4,0.6,0.8,1),cex.axis=1.3,las=2)
legend(0.02, 0.3, c("KMM","SLR", "Zhao et al."),
col = c('red', 'blue', 25),
text.col = "black", lty = c(1, 1, 1),lwd=c(2.2,2,1.5),
pch=c(1,NA,NA),
merge = TRUE, bg = "gray90",cex=1.1)
22000/12
22000/8
rm(list=ls())
?ls()
?list
rm(list=ls())
library(MASS)
library(doParallel)
library(foreach)
library(mvtnorm)
library(ContaminatedMixt)
# library(distrEllipse)
# setwd("C:\\Users\\Xin\\OneDrive\\research\\change point covariance\\code\\simulation")
# setwd('/home/xin/OneDrive/Research/change point covariance/code/simulation')
# setwd("/home/xin/Dropbox/Research/change point covariance/code/simulation")
setwd("C:\\Users\\Xin\\Dropbox\\Research\\change point covariance\\code\\simulation")
source("change_point_bootstrap_lib.R")
# -------------------------------------------
# Simulation setup
# -------------------------------------------
ncores=8
n=100
d=40
nBoot=100
nSim=100
#bandwidth fitting
b=0.8*n^(-1/5)
# b=0.1
Sigma1=diag(rep(1,d))
Sigma2=diag(rep(1,d))
cp_indx=50#the index of the change point
#data generation
para=list(Sigma1=Sigma1,Sigma2=Sigma2,
df=10)
X=bootstrap_gen(n,d,cp_indx,family='mix',para=para)
X
dim(X)
?set.seed
rm(list=ls())
library(MASS)
library(doParallel)
library(foreach)
library(mvtnorm)
library(ContaminatedMixt)
# library(distrEllipse)
# setwd("C:\\Users\\Xin\\OneDrive\\research\\change point covariance\\code\\simulation")
# setwd('/home/xin/OneDrive/Research/change point covariance/code/simulation')
# setwd("/home/xin/Dropbox/Research/change point covariance/code/simulation")
setwd("C:\\Users\\Xin\\Dropbox\\Research\\change point covariance\\code\\simulation")
source("change_point_bootstrap_lib.R")
# -------------------------------------------
# Simulation setup
# -------------------------------------------
ncores=8
n=100
d=40
nBoot=100
nSim=100
#bandwidth fitting
b=0.8*n^(-1/5)
# b=0.1
Sigma1=diag(rep(1,d))
Sigma2=diag(rep(1,d))
cp_indx=50#the index of the change point
para=list(Sigma1=Sigma1,Sigma2=Sigma2,
df=10)
alpha_hat_arr=array(0,c(nSim,25))
alpha=seq(0.01,0.99,length.out=25)#range of probability
X=bootstrap_gen(n,d,cp_indx,family='mix',para=para)
#bootstrap
W=bootstrap_fit(X,nBoot,b,ncores)
W_sort=sort(W)
